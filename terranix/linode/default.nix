{ self, system ? "x86_64-linux", ... }:
let
  region = "ap-southeast";
  pkgs = self.inputs.unstable.legacyPackages.${system};
in {
  # Piggybacks greatly off the following repositories awesome work: https://github.com/houstdav000/terranix-linode-poc
  # Thank you original author and community for enabling this <3
  variable.LINODE_TOKEN = {
    type = "string";
    description = "Linode API token";
    nullable = false;
    sensitive = true;
  };

  terraform.required_providers.linode.source = "linode/linode";

  provider.linode.token = "\${ var.LINODE_TOKEN }";

  resource = {
    linode_image.nixos-base = let
      label = "nixos-base";
      description = "Base image generated by nixos-generator";
      file_path = "${self.packages.${system}.linode-base-image}/nixos.img.gz";
    in { inherit region label description file_path; };

    linode_stackscript.transform = {
      label = "ditto-transform";
      description = "Instructs ditto what it will transform into";
      # TODO: Write a simple wrapper for linode instances to run a rebuild
      # with the correct target
      # script = builtins.readFile "${
      #     self.packages.${system}.ditto-transform-linode
      #   }/bin/ditto-transform-linode";
      script = ''
        #!${pkgs.bash}/bin/bash
        #<UDF name="TARGET" label="target">

        ${self.packages.${system}.ditto-transform}/bin/ditto-transform $TARGET
      '';
      images = [ "any/all" ];
    };
  };
}
